version: "3.8"

services:
  # --- Infra ---
  broker:
    image: bitnami/kafka:3.7
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:29092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,EXTERNAL://broker:29092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
    ports:
      - "9092:9092"
      - "29092:29092"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  # --- Databases per service ---
  order-db:
    image: postgres:16
    environment:
      POSTGRES_DB: orders
      POSTGRES_USER: order_user
      POSTGRES_PASSWORD: order_pass
    ports:
      - "5433:5432"

  inventory-db:
    image: postgres:16
    environment:
      POSTGRES_DB: inventory
      POSTGRES_USER: inventory_user
      POSTGRES_PASSWORD: inventory_pass

  payment-db:
    image: postgres:16
    environment:
      POSTGRES_DB: payments
      POSTGRES_USER: payment_user
      POSTGRES_PASSWORD: payment_pass

  shipping-db:
    image: postgres:16
    environment:
      POSTGRES_DB: shipping
      POSTGRES_USER: shipping_user
      POSTGRES_PASSWORD: shipping_pass

  notification-db:
    image: postgres:16
    environment:
      POSTGRES_DB: notifications
      POSTGRES_USER: notification_user
      POSTGRES_PASSWORD: notification_pass

  # --- Services ---
  api-gateway:
    build: ./src/api-gateway
    ports:
      - "8080:80"
    environment:
      - JWT_SECRET=devsecret
      - JWT_AUDIENCE=orders-api
      - JWT_ISSUER=orders-demo
    depends_on:
      - order-service

  order-service:
    build: ./src/order-service
    environment:
      - DB_URL=postgresql+psycopg://order_user:order_pass@order-db:5432/orders
      - KAFKA_BOOTSTRAP_SERVERS=broker:29092
      - JWT_SECRET=devsecret
      - JWT_AUDIENCE=orders-api
      - JWT_ISSUER=orders-demo
    ports:
      - "8081:8081"
    depends_on:
      - broker
      - order-db

  inventory-service:
    build: ./src/inventory-service
    environment:
      - DB_URL=postgresql+psycopg://inventory_user:inventory_pass@inventory-db:5432/inventory
      - KAFKA_BOOTSTRAP_SERVERS=broker:29092
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=devsecret
      - JWT_AUDIENCE=orders-api
      - JWT_ISSUER=orders-demo
    ports:
      - "8082:8082"
    depends_on:
      - broker
      - inventory-db
      - redis

  payment-service:
    build: ./src/payment-service
    environment:
      - DB_URL=postgresql+psycopg://payment_user:payment_pass@payment-db:5432/payments
      - KAFKA_BOOTSTRAP_SERVERS=broker:29092
      - JWT_SECRET=devsecret
      - JWT_AUDIENCE=orders-api
      - JWT_ISSUER=orders-demo
    ports:
      - "8083:8083"
    depends_on:
      - broker
      - payment-db

  shipping-service:
    build: ./src/shipping-service
    environment:
      - DB_URL=postgresql+psycopg://shipping_user:shipping_pass@shipping-db:5432/shipping
      - KAFKA_BOOTSTRAP_SERVERS=broker:29092
      - JWT_SECRET=devsecret
      - JWT_AUDIENCE=orders-api
      - JWT_ISSUER=orders-demo
    ports:
      - "8084:8084"
    depends_on:
      - broker
      - shipping-db

  notification-service:
    build: ./src/notification-service
    environment:
      - DB_URL=postgresql+psycopg://notification_user:notification_pass@notification-db:5432/notifications
      - KAFKA_BOOTSTRAP_SERVERS=broker:29092
      - JWT_SECRET=devsecret
      - JWT_AUDIENCE=orders-api
      - JWT_ISSUER=orders-demo
    ports:
      - "8085:8085"
    depends_on:
      - broker
      - notification-db
